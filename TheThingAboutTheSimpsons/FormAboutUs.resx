<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>